/* body {
  margin: 0;
  overflow-y:hidden;
  background-color: rgb(45, 185, 255);
}

html,body{
  overflow: hidden
} */


body {
  background-color: rgb(255, 255, 255);
}


.App {
  text-align: center;
}

/* Login */
.Login {
  text-align: center;
  margin-top: 15rem;
}

p {
  font-size: 1.3rem;
  font-weight: 600;
}

h1 {
  font-size: 3rem;
}

img {
  border-radius: 50%;
  width: 150px;
  height: 150px;
}

button {
  margin-top: 14px;
  padding: 7px 40px;
  border: none;
  border-radius: 10px;
  box-shadow: 1px 5px 10px #626262;
  cursor: pointer;
  background-color: #cf9b48;
  color: white;
  font-weight: 800;
  font-size: 1.2rem;
}
/* Login */

/* Graph.js */
/* display: flex;
  justify-content: center;
  これら二つはFlexコンテナと呼ばれるものでdisplayでflexを指定、
  justifyでflexの要素を横方向に中央揃えしている
*/
.container {
  /* display: flex;
  justify-content: center; */
  display: flex;
  justify-content: center;
  height: 5%; /* グラフを縦方向に中央揃えするための高さ指定 */
}

@media (max-width: 480px) {
  .container {
      height: 400px;
  }
}

.app-container {
  width: 60%;
  height: 450px;/* なぜかこれを加えると画面を元の大きさに戻してもちゃんとしたサイズになる */
}


.element {
  /* display: block;
  width: 100%;
  height: 80%; */
  background-color: rgb(238, 238, 238);
}
/* Graph.js */


/* Input_weight.js */
.container_input_weight {
  /* display: flex;
  justify-content: space-around; */
  text-align: left;
  margin: 5%; 
}

.element_input_weight {
  margin: 5px 100px 5px;
  text-align: left;
  display: 'flex';
  
}
/* Input_weight.js */
